▣ 튜닝예제26. 3개의 테이블을 해쉬 조인 할때 해쉬 테이블을 선택할 수 있어요 !

 2개의 테이블을 해쉬조인할 때 해쉬 테이블을 선택하는 방법은
 leading 힌트의 괄호 안에 첫번째 테이블로 작성하기만 하면 되는데
 3개의 테이블 인 경우에는 leading 말고 특별한 힌트를 써야합니다.

■ 실습1.  emp 와 dept 와 bonus 를 다음의 순서로 해쉬 조인하시오 !

 조인순서:  dept ---> emp ---> bonus 
                       ↑            ↑
 조인방법:       해쉬조인    해쉬조인

 select  /*+ leading(d,e,b)  use_hash(e) use_hash(b) */  e.ename,  d.loc,  b.comm2
      from  emp   e, dept   d, bonus   b
      where   e.deptno = d.deptno   and  e.empno = b.empno;

select * from  table(dbms_xplan.display_cursor(null, null, 'ALLSTATS LAST'));

설명: dept 와 emp 와 조인할 때 dept 가 해쉬 테이블이 됩니다.
        dept 와 emp 와 조인한 결과 데이터가 해쉬 테이블이 되고
       이 해쉬 테이블이 bonus 와 해쉬조인을 합니다.

■ 실습2.  위의 실행계획이 다음과 같이 되게 하시오 !


 



  bonus 를 해쉬테이블로 구성하는겁니다. 

select  /*+ leading(d,e,b)  use_hash(e) use_hash(b) 
                swap_join_inputs(b) */  e.ename,  d.loc,  b.comm2
      from  emp   e, dept   d, bonus   b
      where   e.deptno = d.deptno   and  e.empno = b.empno;

select * from  table(dbms_xplan.display_cursor(null, null, 'ALLSTATS LAST'));

 ※ 3개의 테이블을 해쉬조인할 때 꼭 알아햐는 힌트 2가지 ?

 1.  swap_join_inputs   :  해쉬 테이블을 결정하는 힌트 (메모리로 올라가는 테이블)
 2.  no_swap_join_inputs : 탐색(prob) 테이블을 결정하는 힌트(디스크에 있는 테이블)

 메모리로 올라가는 테이블은 상대적으로 크기가 작은 테이블이어야합니다. 
 또는 검색조건에 의해서 엑세스되는 건수가 작은 테이블이 해쉬 테이블이어야합니다.

문제61.  아래의 조인문의 실행계획이 다음과 같이 나오게 하시오 !

select  e.ename,  d.loc,  b.comm2
      from  emp   e, dept   d, bonus   b
      where   e.deptno = d.deptno   and  e.empno = b.empno;

답:

select  /*+ leading(b,e,d)  use_hash(e)  use_hash(d)  
               swap_join_inputs(d)  */   e.ename,  d.loc,  b.comm2
      from  emp   e, dept   d, bonus   b
      where   e.deptno = d.deptno   and  e.empno = b.empno;

문제62.  아래의 환경을 구성하고  아래의 SQL을 수행하시오 ! 

-환경 구성
drop  table  sales200;
drop  table times200;
drop  table products200;

create table sales200 as  select * from sh.sales;
create table times200 as select * from sh.times;
create table products200 as select * from sh.products;

select   p.prod_name, t.CALENDAR_YEAR, sum(s.amount_sold)
  from   sales200  s, times200  t, products200  p
  where   s.time_id = t.time_id
  and  s.prod_id = p.prod_id        
    and  t.CALENDAR_YEAR in (2000,2001)      
    and p.prod_name like 'Deluxe%'
    group  by  p.prod_name, t.calendar_year;  

문제63.  위의 SQL의 조인 순서와 조인 방법이 다음과 같이 수행되게하시오 !

  조인순서:   times200 ---->  sales200 ----> products200
                               ↑                  ↑
  조인방법:           해쉬조인             해쉬조인

 답:
select /*+ leading(t,s,p)  use_hash(s)  use_hash(p) */ 
  p.prod_name, t.CALENDAR_YEAR, sum(s.amount_sold)
  from   sales200  s, times200  t, products200  p
  where   s.time_id = t.time_id
  and  s.prod_id = p.prod_id        
    and  t.CALENDAR_YEAR in (2000,2001)      
    and p.prod_name like 'Deluxe%'
    group  by  p.prod_name, t.calendar_year;  

설명:  time200 과 sales200 테이블을 조인할 때 time200 에 해쉬 테이블이 되었고
        time200 과 sales200 을 조인한 결과와 products200 을 조인할 때
        해쉬 테이블이 products200 이 되었습니다.

문제64.  위의 SQL의 실행계획이 다음과 같이 나오게 하시오 !

select /*+ leading(t,s,p)  use_hash(s)  use_hash(p)
            no_swap_join_inputs(p) */ 
  p.prod_name, t.CALENDAR_YEAR, sum(s.amount_sold)
  from   sales200  s, times200  t, products200  p
  where   s.time_id = t.time_id
  and  s.prod_id = p.prod_id        
    and  t.CALENDAR_YEAR in (2000,2001)      
    and p.prod_name like 'Deluxe%'
    group  by  p.prod_name, t.calendar_year;  

select * from  table(dbms_xplan.display_cursor(null, null, 'ALLSTATS LAST'));

문제65.  위의 SQL의 조인 순서를 어떻게 줘야하는지 알아내기 위해서
            다음과 같이 사전 조사를 수행합니다.

select  count(*)  from  sales200;  -- 918843
select  count(*)  from   times200;  -- 1826
select  count(*)  from  products200;  -- 72

select count(*) from  times200  where   CALENDAR_YEAR in (2000,2001) ; -- 731
select count(*) from  products200  where  prod_name like 'Deluxe%';  -- 1

select  /*+ leading(p,s,t) use_hash(s)  use_hash(t)  */ 
       p.prod_name, t.CALENDAR_YEAR, sum(s.amount_sold)
  from   sales200  s, times200  t, products200  p  -- 918843, 1826, 72 
  where   s.time_id = t.time_id
  and  s.prod_id = p.prod_id        
    and  t.CALENDAR_YEAR in (2000,2001)        --  731
    and p.prod_name like 'Deluxe%'               --  1
    group  by  p.prod_name, t.calendar_year;  
